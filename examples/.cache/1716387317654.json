{"date":"2024-05-22T14:15:16.581Z","courseId":"17","assignment":"AP-Spring03-CA6","trace":{"version":405,"content":"#include \"course.hpp\"\n\nCourse::Course(std::string i,std::string n , std::string p_n , int cap ,std::vector <std::string> m_i,std::string pre,std::string d, std::string t,std::string c_n)\n{\n    id = i;\n    name = n;\n    professor_name = p_n;\n    capacity = cap;\n    class_number = c_n;\n    majors_id = m_i;\n    prerequisite = pre;\n\n    std::stringstream S(d);\n    std::string day,month,year;\n\n    getline(S,year,DATE_SEPRATOR);\n    getline(S,month,DATE_SEPRATOR);\n    getline(S,day,DATE_SEPRATOR);\n    \n    exam_date = new Date(std::stoi(day),std::stoi(month),std::stoi(year));\n\n    std::stringstream S2(t);\n    std::string day_of_week_str,start_time_str,end_time_str;\n\n    getline(S2,day_of_week_str,DAY_TIME_SEPRATOR);\n    getline(S2,start_time_str,START_END_SEPRATOR);\n    getline(S2,end_time_str,START_END_SEPRATOR);\n\n    Week day_of_week;\n    int start_time = stoi(start_time_str);\n    int end_time = stoi(end_time_str);\n\n    if(day_of_week_str == \"Saturday\")\n        day_of_week = Saturday;\n    else if(day_of_week_str == \"Sunday\")\n        day_of_week = Sunday;\n    else if(day_of_week_str == \"Monday\")\n        day_of_week = Monday;\n    else if(day_of_week_str == \"Tuesday\")\n        day_of_week = Tuesday;\n    else if(day_of_week_str == \"Wednesday\")\n        day_of_week = Wednesday;\n    else\n        throw ArgumentException(ERROR_1);\n\n    if((start_time < 1 || start_time > 24) && (start_time < 1 || start_time > 24))\n\n    class_time = new Class_Time(day_of_week,start_time,end_time);\n\n}\n\nbool Course::is_Interrupt_Course(std::string time)\n{\n    std::stringstream S(time);\n    std::string day_of_week,start_time,end_time;\n\n    getline(S,day_of_week,DAY_TIME_SEPRATOR);\n    getline(S,start_time,START_END_SEPRATOR);\n    getline(S,end_time,START_END_SEPRATOR);\n\n    if(class_time->is_Interrupt_Time(day_of_week,std::stoi(start_time),std::stoi(end_time)))\n        return true;\n    return false;\n}\n\nbool Course::is_Valid_Id(std::string course_id)\n{\n    if(id == course_id)\n        return true;\n    return false;\n}\n\nbool Course::is_Valid_Semester(std::string semester)\n{\n    if(std::stoi(semester) >= std::stoi(prerequisite))\n        return true;\n    return false;\n}\n\nbool Course::is_Valid_Major(std::string id)\n{\n    for(int i=0 ; i<majors_id.size() ; i++)\n    {\n        if(id == majors_id[i])\n            return true;\n    }\n    return false;\n}\n\nvoid Course::Print_Info()\n{\n    std::cout << id << \" \" << name << \" \" <<  capacity << \" \" << professor_name << std::endl;\n}\n\nvoid Course::Print_All_Info()\n{\n    std::cout << id << \" \" << name << \" \" <<  capacity << \" \" << professor_name << \" \";\n    class_time->Print();\n    std::cout << \" \";\n    exam_date->Print();\n    std::cout << \" \" << class_number << std::endl;\n}\n\nstd::string Course::get_Name()\n{\n    return name;\n}\n\nbool Course::is_Interrupted(Course *course)\n{\n    if(exam_date->is_Equal_Date(course->exam_date))\n    {\n        return true;\n    }\n\n    Week day_of_week;\n    int start_time,end_time;\n    day_of_week = course->class_time->get_Day();\n    start_time = course->class_time->get_Start();\n    end_time = course->class_time->get_End();\n\n    if(class_time->is_Interrupt_Time(day_of_week,start_time,end_time))\n        return true;\n    \n    return false;\n}","filename":"/home/erfan/Desktop/Project6/A6_1/course.cpp","identifier":"Text Change","lineCount":126,"languageId":"cpp"},"failed":false}