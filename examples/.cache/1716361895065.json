{"date":"2024-05-22T07:11:34.180Z","courseId":"17","assignment":"AP-Spring03-CA6","trace":{"version":25,"content":"#include \"Put_method.hpp\"\n\n\nPut::Put(std::string t , std::vector <std::string> cmds)\n:Method(t,cmds) {}\n\nvoid Put::Process_Cmd(std::string cmd_line ,std::vector<Major*> &majors ,std::vector<Unit*> &units ,std::vector<User*> &users ,std::vector<Course*> &courses, User **current_user)\n{\n    std::stringstream S(cmd_line);\n\n\tstd::string temp_str , command;\n\n\tS >> temp_str;\n\tS >> command;\n\tS >> temp_str;\n\n    if(command == USER_CMD_TYPE_9)\n    {\n        std::string id_argument,id;\n        S >> id_argument >> id;\n\n        if(stoi(id) <= 0)\n            throw CommandException(ERROR_1);\n\n        Course *target_course;\n        target_course = Take_A_Course(courses,id);\n\n        Student *student = dynamic_cast<Student*>(*current_user);\n        if(student == NULL)\n            throw CommandException(ERROR_3);\n\n        if(!student->is_Allowed_to_Take(target_course))\n            throw CommandException(ERROR_3);\n        \n        std::cout << DONE_MESSAGE << std::endl;\n    }\n\n}\n\nCourse* Put::Take_A_Course(std::vector<Course*> courses,std::string course_id)\n{\n    bool id_validation = false;\n    Course* course;\n    for(int i=0 ; i<courses.size() ; i++)\n    {\n        if(courses[i]->is_Valid_Id(course_id))\n        {\n            id_validation = true;\n            course = courses[i];\n            break;\n        }\n    }\n    if(!id_validation)\n        throw CommandException(ERROR_2);\n\n    return course;\n}","filename":"/home/erfan/Desktop/Project6/A6_1/Put_method.cpp","identifier":"Text Change","lineCount":57,"languageId":"cpp"},"failed":false}