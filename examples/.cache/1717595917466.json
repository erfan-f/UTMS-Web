{"date":"2024-06-05T13:58:36.140Z","courseId":"17","assignment":"AP-Spring03-CA6-phase2","trace":{"content":"#include \"student.hpp\"\n\nStudent::Student(std::string n,std::string i,std::string m,std::string m_i,std::string s,std::string p)\n:User(n,i,m,m_i,p)\n{\n\tsemester = s;\n\tuser_type = USER_TYPE_2;\n\n\tvalid_cmds.push_back(LOGIN_CMD);\n\tvalid_cmds.push_back(LOGOUT_CMD);\n\tvalid_cmds.push_back(COURSES_CMD);\n\tvalid_cmds.push_back(POST_CMD);\n\tvalid_cmds.push_back(PERSONAL_PAGE_CMD);\n\tvalid_cmds.push_back(CONNECT_CMD);\n\tvalid_cmds.push_back(NOTIFICATION_CMD);\n\tvalid_cmds.push_back(MY_COURSES_CMD);\n\tvalid_cmds.push_back(PROFILE_PHOTO_CMD);\n\tvalid_cmds.push_back(COURSE_CHANNEL_CMD);\n\tvalid_cmds.push_back(COURSE_POST_CMD);\n\tvalid_cmds.push_back(TA_REQUEST_CMD);\n\n}\n\nSt~Student()\n\n\nstd::string Student::get_Info()\n{\n\tstd::ostringstream S;\n\tS << name << SPACE_CHAR << major << SPACE_CHAR << semester << SPACE_CHAR;\n\tfor(int i=0 ; i<courses.size() ; i++)\n\t{\n\t\tS << courses[i]->get_Name();\n\t\tif(i != courses.size() - 1)\n\t\t\tS << WORD_SEPRATOR;\n\t}\n\tS << std::endl;\n\treturn S.str();\n}\n\nstd::string Student::get_Page_Info()\n{\n\tstd::ostringstream S;\n\n\tS << get_Info();\n\t\n\tSort_Posts();\n\t\n\tfor(int i=0 ; i<posts.size() ; i++)\n\t{\n\t\tS <<  posts[i]->get_Info();\n\t}\t\n\treturn S.str();\n}\n\nstd::string Student::get_Semester()\n{\n\treturn semester;\n}\n\n\nbool Student::is_Allowed_to_Take(Course* new_course)\n{\n\tif(!new_course->is_Valid_Semester(semester))\n\t\treturn false;\n\tif(!new_course->is_Valid_Major(major_id))\n\t\treturn false;\n\t\n\tfor(int i=0 ; i<courses.size() ; i++)\n\t{\n\t\tif(courses[i]->is_Interrupted(new_course))\n\t\t\treturn false;\n\t}\n\n\tSend_Notification(GET_COURSE_NOTIF);\n\tcourses.push_back(new_course);\n\n\treturn true;\n}\n\nvoid Student::Delete_Course(std::string course_id)\n{\n\tbool id_validation = false;\n\tfor(int i=0 ; i<courses.size() ; i++)\n\t{\n\t\tif(courses[i]->is_Valid_Id(course_id))\n\t\t{\n\t\t\tid_validation = true;\n\t\t\tcourses.erase(courses.begin() + i);\n\t\t\tSend_Notification(DELETE_COURSE_NOTIF);\n\t\t\tbreak;\n\t\t}\n\t}\n\tif(!id_validation)\n\t\tthrow AvailabilityException(NOT_FOUND_ERROR);\n}\n\n\nstd::string Student::get_Courses_Info()\n{\n\tstd::ostringstream S;\n\n\tif(courses.size() == 0)\n\t\tthrow AvailabilityException(EMPTY_ERROR);\n\n\tfor(int i=0 ; i<courses.size() ; i++)\n\t{\n\t\tS << courses[i]->get_All_Info();\n\t}\n\treturn S.str();\n}\n\n\nvoid Student::Add_Collaborated_Course(Course *course)\n{\n\tcollaborated_courses.push_back(course);\n}\n","filename":"/home/erfan/Desktop/Project6_2/A6_1/student.cpp","identifier":"Save Document","languageId":"cpp","version":10,"lineCount":118},"failed":false}