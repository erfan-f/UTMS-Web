{"date":"2024-05-24T07:53:43.626Z","courseId":"17","assignment":"AP-Spring03-CA6","trace":{"content":"#include \"method.hpp\"\n\nMethod::Method(std::string t , std::vector <std::string> cmds)\n{\n\ttype = t;\n\tcommands = cmds;\n\n}\n\nUser* Method::Find_User(std::vector<User*> users,std::string user_id)\n{\n\tUser *user;\n\tbool id_validation = false;\n\tfor(int i=0 ; i<users.size() ; i++)\n\t{\n\t\tif(users[i]->is_Valid_Id(user_id))\n\t\t{\n\t\t\tid_validation =true;\n\t\t\tuser = users[i];\n\t\t\tbreak;\n\t\t}\t\n\t}\n\tif(!id_validation)\n\t\tthrow AvailabilityException(ERROR_2);\n\n\treturn user;\n}\n\nUnit* Method::Find_Unit(std::vector<Unit*> units,std::string unit_id)\n{\n\tUnit *unit;\n\tbool id_validation = false;\n\n\tfor(int i=0 ; i<units.size() ; i++)\n\t{\n\t\tif(units[i]->is_Valid_Id(unit_id))\n\t\t{\n\t\t\tid_validation = true;\n\t\t\tunit = units[i];\n\t\t\tbreak;\n\t\t}\n\t}\n\tif(!id_validation)\n\t\tthrow AvailabilityException(ERROR_2);\n\n\treturn unit;\n}\n\nCourse* Find_Course(std::vector<Course*> courses,std::string course_id)\n{\n\tCourse *course;\n\tbool id_validation = false;\n\n\tfor(int i=0 ; i<courses.size() ; i++)\n\t{\n\t\tif(courses[i]->is_Valid_Id(course_id))\n\t\t{\n\t\t\tid_validation = true;\n\t\t\tcourse = courses[i];\n\t\t\tbreak;\n\t\t}\n\t}\n\tif(!id_validation)\n\t\tthrow AvailabilityException(ERROR_2);\n\n\treturn course;\n}\n\n\nbool Method::is_Equal(std::string m)\n{\n\tif(type == m)\n\t\treturn true;\n\treturn false;\n}\n\nbool Method::is_Cmd_Valid(std::string cmd)\n{\n\tfor(int i=0 ; i<commands.size() ; i++)\n\t{\n\t\tif(cmd == commands[i])\n\t\t\treturn true;\n\t}\n\treturn false;\n}\n\nbool Method::is_Number(std::string str)\n{\n    for(int i=0 ; i<str.length() ; i++)\n    {\n        if(str[i] < 48 || str[i] > 57)\n            return false;\n    }\n    return true;\n}\n\n\n","filename":"/home/erfan/Desktop/Project6/A6_1/method.cpp","identifier":"Save Document","languageId":"cpp","version":172,"lineCount":98},"failed":false}